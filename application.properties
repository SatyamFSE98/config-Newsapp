# Application Name


spring.datasource.url=jdbc:mysql://localhost:3306/authdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=Root

#eureka
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://13.232.232.252:8761/eureka
# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

# App Properties
auth.app.jwtSecret  = Satyamauthsecret
auth.app.jwtExpireTime = 86400000

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#kafka test
logging.level.org.apache.kafka.clients.NetworkClient=error
#eureka client test
logging.level.com.netflix.discovery: OFF
#kafka configuration
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id:NewsApp
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.topic-json.name=Newsapp_json

